// automatically generated by Xtext
grammar fr.univcotedazur.l3ia.legolanguage.xtext.Uduv with org.eclipse.xtext.common.Terminals

import "http://www.example.org/langageCompilation" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program returns Program:
	{Program}
	'Program'
	name=EString
	'{'
		('statement' '{' statement+=Statement ( "," statement+=Statement)* '}' )?
	'}';

Statement returns Statement:
	WhileLoop | Substarction | GT | Assignement | leInteger | leString | LT | ForLoop | Print | Variable_Proxy;

Comparaison returns Comparaison:
	GT | LT;

Expression returns Expression:
	Substarction | GT | Assignement | LT | Print | Variable_Proxy;

Variable returns Variable:
	leInteger | leString;


WhileLoop returns WhileLoop:
	'while'

	'(' loopCondition=Comparaison')'
	'{'
		(statement+=Statement)*
		
	'}';

ForLoop returns ForLoop:
	'For'
	'(' loopCondition=Comparaison')'
	'{'
		(statement+=Statement)*
		
	'}';


Substarction returns Substarction:

	'('
		left=Expression
		'-'
		right=Expression
	')';

GT returns GT:
	'('
		left=Expression
		'>'
		right=Expression
	')';

LT returns LT:
	'('
		left=Expression
		'<'
		right=Expression
	')';
	
	
Assignement returns Assignement:
	
	
		'left' left=Expression
		'='
		'right' right=Expression
	;

leInteger returns leInteger:
	{leInteger}
	(isConst?='isConst')?
	'int'
	name=EString
		('initialeValue' initialeValue=EInt)?
		;

leString returns leString:
	{leString}
	'String'
	name=EString
	'{'
		('initialeValue' initialeValue=EString)?
	'}';


Print returns Print:
	{Print}
	'print(' ')'
	name=EString;

Variable_Proxy returns Variable_Proxy:
	'Variable_Proxy'
	name=EString
	'{'
		'Variable' Variable=[Variable|EString]
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;
