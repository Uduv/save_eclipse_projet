// automatically generated by Xtext
grammar fr.univcotedazur.L3IA.legolanguagePr.xtext.Uduv with org.eclipse.xtext.common.Terminals

import "http://www.example.org/langageCompilation" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program returns Program:
	'Program'
	name=EString
	'{'
		 (statement+=Statement)*
	'}';

Statement returns Statement:
	WhileLoop | Expression | Variable ;


Expression returns Expression:
	Substarction | Comparaison | Assignement | Variable_Proxy;

Comparaison returns Comparaison:
	 GT | LT;


Variable_Proxy returns Variable_Proxy : 
	Variable = [Variable|EString]
;

Variable returns Variable:
	 leInteger | leString;
	 


EString returns ecore::EString:
	STRING | ID;

WhileLoop returns WhileLoop:
	'while'
		'('loopCondition=Comparaison ')'
		'{'
		( statement+=Statement ( "," statement+=Statement)*  )?
		'}'
	;

Substarction returns Substarction:
		'left' left=Expression
		'-'
		'right' right=Expression
		;

GT returns GT:
	'('
		left=Expression
		'>'
		right=Expression
	')';

LT returns LT:
		'('
		left=Expression
		'<'
		right=Expression
	')';

Assignement returns Assignement:
		'left' left=Expression
		'='
		'right' right=Expression
	;



EBoolean returns ecore::EBoolean:
	'true' | 'false';

leInteger returns leInteger:
	{leInteger}
	(isConst?='isConst')?
	'Int'
	name=EString
	initialeValue=EInt?
	;

leString returns leString:
	{leString}
	(isConst?='isConst')?
	'String'
	name=EString
	
		('initialeValue' initialeValue=EString)?
	;

EInt returns ecore::EInt:
	'-'? INT;
